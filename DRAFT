//Animals Caretaker
//Simulates caring for a virtual pet
//Author is Moses Arocha

#include <iostream>
#include <windows.h>
#include <string>
#include <algorithm>
#include <stdio.h>
#include <ctype.h>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <sstream>

using namespace std;

//returns the current attributes
WORD GetConsoleTextAttribute (HANDLE hCon)
{
  CONSOLE_SCREEN_BUFFER_INFO con_info;
  GetConsoleScreenBufferInfo(hCon, &con_info);
  return con_info.wAttributes;
}

HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
const int saved_colors = GetConsoleTextAttribute(hConsole);

class Animals
{
public:
	Animals(int hunger = 5, int boredom = 5, int health = 100, int stress = 10, int sleep = 7, int intelligence= 20);
	void Story(int Random);
	void Eat(int food = 20);
	void Interact(int fun = 20);
	void Speak(int Random);
	void Nap();
	void Train(int iq = 5);
	void Welcome();
	int GetHunger();
	int GetBoredom();
	int GetHealth();
	int GetStress();
	int GetSleep();
	int GetIntelligence();
	string Weather(string RandomWeather, int Weather);

private:
	int m_Hunger;
	int m_Boredom;
	int m_Health;
	int m_Stress;
	int m_Sleep;
	int m_Intelligence;

	int GetMood(int Random = 6);
	void PassTime(int time = 1);
};

Animals::Animals(int hunger, int boredom, int health, int stress, int sleep, int intelligence):
	m_Hunger(hunger),
	m_Boredom(boredom),
	m_Health(health),
	m_Stress(stress),
	m_Sleep(sleep),
	m_Intelligence(intelligence)
{}

 int Animals::GetMood(int Random)
{
	srand(static_cast<unsigned int>(time(0)));  //seed random number generator

	 Random = rand() % 20 + 1;         // random number between 1 and 10
	
	 return (Random);
}

int Animals::GetHunger()
{
	return (m_Hunger);
}

int Animals::GetBoredom()
{
	return (m_Boredom);
}

int Animals::GetHealth()
{
	return (m_Health);
}

int Animals::GetStress()
{
	return (m_Stress);
}

int Animals::GetSleep()
{
	return (m_Sleep);
}

int Animals::GetIntelligence()
{
	return (m_Intelligence);
}

void Animals::PassTime(int time)
{
	m_Hunger += time;
	m_Boredom += time;
	m_Stress += time;
	m_Sleep += time;
	m_Health -= time;
}

 void Animals::Story(int Random)
{
	string RandomWeather;
	int Weather;
	string Continue;
	string Walk;

	srand(static_cast<unsigned int>(time(0)));  //seed random number generator

	 Weather = rand() % 5 + 1;         // random number between 1 and 10

	 if (Weather == 1)
	 {
		 RandomWeather = "Cloudy";
	 }
	 else if (Weather == 2)
	 {
		 RandomWeather = "Sunny";
	 }
	 else if (Weather == 3)
	 {
		 RandomWeather = "Snowy";
	 }
	 else if (Weather == 4)
	 {
		 RandomWeather = "Rainy";
	 }
	 else if (Weather == 5)
	 {
		 RandomWeather = "Windy";
	 }
	 else
	 {
		 RandomWeather = "Stormy";
	 }

	
	int mood = GetMood(Random);
	string WordMood;

	if (mood > 15)
	{
        WordMood = "Angry";
	}
	else if (mood > 10)
	{
        WordMood = "Tired";
	}
    else if (mood > 5)
	{
        WordMood = "Stressed";
	}
    else
	{
        WordMood = "Depressed";
	}
	
	cin.ignore();
	Sleep(150);
	cout << "\n\n Hello! \n\n I Am The Former Care Taker Of The Elephants At The Safari.\n"
		 << " Good Luck. They Are A Hassle. Everyday They Need Two Baths,\n"
		 << " To Be Fed 35 Pounds Of Food Each, And 9 Hours Of Sleep.\n\n"
		 << " I Hope You Are Up For The Challenge. Do You Want To Continue? [Y/N] ";
	
	getline(cin, Continue);

	cout << "\n\n Well Anyways, The Game Will Continue! Hurry!\n";

	Sleep(1550);
	cout << "\n Here! Take This! It's A Tranquilizer. Approach Charlize Slowly!\n"
		 << " She Seems Very " << WordMood << " Oh No!...\n\n ";
	Sleep(1550);
	cout << " Shoot Her With It Already!\n"
		 << "\t Press Enter To Shoot Charlize.\n";
	
	cin.ignore();
	cin.get();

	cout << "\n\t Okay Great. She Is Safe Now, Please Pet Her.\n"
		<< "\t\t Press Enter To Pet Charlize.\n";
	cin.ignore();
	cin.get();

	PassTime();

	Sleep(150);
	cout << "\n Amazing. Simply Amazing.\n\n Sounds Like She Is Happy, Take Her For A Walk...\n"
		 << "\n As You Take Charlize For A Walk, She Gets Scared...\n"
		 << " A Mouse Was On The Road. She Ran Away, Chase Her!\n";
	

	for (int i = 0; i < 3; ++i)
		{
		cin.ignore();
		cin.get();
		}

	cout << "\n Oh Thank Goodness, You Caught Her! Please, Walk Her Back.\n"
		 << "\n As You Walked Her Back To The Zoo, She Gets Tired.\n"
		 << "\n She Decides To Sit Down. Please, Take Her Back To The Zoo Now.\n";
	cout << " Please Type Walk To Walk Back To The Zoo. ";
	cin >> Walk;

	PassTime();

	cout << "\n\n As You Enter The Zoo, She Begins To Speak To You..\n\n";
	Sleep(5550);
	cout << "\t 'Hey, I'm Charlize.' - Charlize The Animals\n"
		 << " Scared You Run Away And Never Come Back.\n\n";
	Sleep(1550);
	cout << " To This Day You Wonder What Ever Happend To Charlize...\n\n"
		 << " Today Is The Day You Are Going To Visit Her, After 15 Years.\n"
		 << " Nervous, You Stumble Through The Zoo Towards Her Cage...\n\n";
	Sleep(1550);
	cout << " It's Not The Same As You Remember, You Wish You Hadn't Left.\n"
		 << " As You Walk To Her Cage, She Instantly Recongizes You.\n"
		 << " As She Strolls Towards You A Smile Spreads Across Your Face,\n"
		 << " You Waited Years For This To Happen, You Have Missed Her...\n";
	cout << "\n\n Press Enter To Continue...";
	cin.ignore();
	cin.get();


	PassTime();

}

void Animals::Eat(int food)
{
	char Feed;

	m_Hunger = m_Hunger - 2;
	if (m_Hunger < 0)
	{
		m_Hunger = 0;
	}
	else if (m_Hunger > 10)
	{
		m_Hunger = 10;
	}

	cout << "\n\n As You Walk Over To Charlize, She Seems Hungry. So You Give Her Some Food.\n"
		 << " She Thanks You By Letting You Touch Her Trunk.\n"
		 << " Would You Like To Feed Her Again? [Y/N] ";
	cin >> Feed;

	Feed = toupper(Feed);

	if (Feed == 'Y')
	{
		SetConsoleTextAttribute(hConsole, saved_colors);
		cout << "\n Great Charlize Has Been Fed! She Loves You More Now.\n";
		m_Hunger = m_Hunger - 2;
	}
	else
	{
		cout << "\n She Gave You A Dirty Look. This Is Not A Good Sign.\n";
	}

	cin.ignore();
	cin.get();

	PassTime();


}

void Animals::Speak(int Random)
{
	int MoodNum = GetMood(Random);
	string mood;
	string discuss;

	m_Health = m_Health + 10;
	if (m_Health < 0)
	{
		m_Health = 0;
	}
	if (m_Health > 100)
	{
		m_Health = 100;
	}

	if (MoodNum > 15)
	{
        mood = "Fustrated";
	}
    else if (MoodNum > 10)
	{
        mood = "Happy";
	}
    else if (MoodNum > 5)
	{
        mood = "Depressed";
	}
    else
	{
        mood = "Cheerful";
	}

	Sleep(550);
	cout << "\n\n I Am Charlize, I Have An Interesting Life! ";
	cout << " I Am Very " << mood; cin.ignore();
	cout << ". \n Thankfully, I Have A Caring CareTaker, Who Always Talks To Me.\n";
	cout << " What Do You Want To Talk About?? Oh, How About Peanuts!\n";
	cout << "\n Please Insert What You Would Like To Discuss: ";
	getline(cin, discuss);

	if (discuss.length() < 5)
	{
		cout << "\n I Would Love To Talk About That!\n";
	}
	else
	{
		cout << "\n Ehh, Alright I Guess. K.\n";
	}

	cout << " \n\t Well I Have To Leave Now, So Goodbye!\n\n";
	cin.get();

	PassTime();

}

void Animals::Interact(int fun)
{
	string game;

	cout << "\n\n Yay! Let's Play A Game!\n\n";

	m_Boredom -= fun;
	m_Stress -= 4;
	if (m_Boredom < 0)
	{
		m_Boredom = 0;
	}
	else if (m_Boredom > 10)
	{
		m_Boredom = 10;
	}

	cin.ignore();

	cout << " Oooh, What Game Would You Like To Play!?!\n"
		 << " Choose A Game You Would Like To Play: Hide And Seek or Fetch \n\t\t";
	getline (cin, game);

	if (game.length() < 4)
	{
		cout << "\n\n\t Yes! Let's Play!" << endl;
	}
	else
	{
		cout << "\n\n\t Oh My Gosh Yes! Let's Play!" << endl;
	}

	cin.get();

	PassTime();

}

void Animals::Nap()
{
	m_Sleep = m_Sleep - 5;

	if (m_Sleep < 0)
	{
		m_Sleep = 0;
	}
	else if (m_Sleep > 15)
	{
		m_Sleep = 15;
	}

	int hours = 0;

	cout << "\n\n It Seems That Charlize Has Fallen Asleep.\n"
		 << " In Order For The Game To Continue, She Must Sleep.\n"
		 << " Press Enter For Her To Sleep Safely.\n\n";

	for (int i = 0; i < 16; ++i)
		{
		++hours;
		cin.get();
		cout << "\t" << hours <<" Hours Has Gone By...\n";
		}

	cout << "\n\n Amazingly, She Has Awoken! Great!\n";
	cout << " Everyday, She Needs 16 Hours Of Sleep, So Make Sure You Come Back!\n";
	cout << " If You Don't She Will Cry And Run Away!\n";
	cin.get();

	PassTime();
}

void Animals::Train(int iq)
{
	vector<string> Tricks;
	vector<string> Words;

	string choice;
	string trick;
	string word;
	char repeat = 'Y';

	cin.ignore();
	cout << "\n\n What Would You Like To Teach Charlize? [Tricks Or Words]\n\t";
	getline(cin, choice);

	while (repeat == 'Y' || repeat == 'y')
	{
		if (choice.length() > 5)
		{
			cin.ignore();
			cout << "\n Please Enter A Trick You Would Like To Teach Charlize:\n\t";
			getline(cin, trick);
			m_Intelligence += iq;
			Tricks.push_back(trick);
		}
		else
		{
			cin.ignore();
			cout << "\n Please Enter A Word You Would Like To Teach Charlize:\n\t";
			getline(cin, word);
			m_Intelligence += iq;
			Words.push_back(word);
		}

		

		cout << "\n\n Would You Like To Teach Charlize More Things?! [Y/N] ";
		cin >> repeat;

		

		PassTime();

	}
	cout << "\n\n Amazing! Charlize Has Learned So Much! Come Back Again.\n\n";
	cin.get();
	
		
}

void Animals::Welcome()
{
	string type;
	int level = 1;

	cout << " From Moses Arocha, \n To Matthew,\n\n Greetings! \n\n I Hope You Are Having A Wonderful Day. I Am Glad To See You Back.\n"
		 << " I Know, It's Been A While. Well, To Begin, This Is Charlize.\n"
		 << " Here You Will Be The CareTaker. What Type Of CareTaker Would You Like To Be?\n";
	cout << "\n Please Insert One Of The Three Below: [Nice, Magical, Evil] ";
	getline(cin, type);

	if (type == "NICE" || type == "Nice" || type == "nice")
	{
		cout << "\n\t Great! You Will Be A Nice CareTaker!\n";
	}
	else if (type.length() > 4)
	{
		cout << "\n\t I Hope Everything Turns Out Well...\n";
	}
	else if (type == "EVIL" || type == "evil" || type == "Evil")
	{
		cout << "\n\t This Does Not Seem Like A Great Sign...\n";
	}
	else
	{
		cout << "\n\t You Chose Wrong. You Get To Be Nice!\n";
	}

	Sleep(1550);
	cout << "\n\n What Level Of Difficulty Do You Wish To Play The Game?\n\n";
	cout << " 1 - Easy\n";
	cout << " 2 - Medium\n";
	cout << " 3 - Veteran\n";


	cout << "\n\t\tWhat Would You Like To Do? : ";
		cin >> level;

	switch (level)
	{
	case 1:
		cout << "\n\n Great, The Rules Of The Game Are Simple. DO NOT KILL CHARLIZE!\n";
		cout << "\n\n\t The Statics of Charlize Can Be Found Below.\n";

		cout << "\n Boredom Level Is A " << GetBoredom() << " Out Of 10." << endl;
		cout << "\n Health Level Is A " << GetHealth() << " Out Of 100." << endl;
		cout << "\n Hunger Level Is A " << GetHunger() <<  " Out of 10. " << endl;
		cout << "\n Intelligence Level Is A " << GetIntelligence() << " Out of 200. " <<endl;
		cout << "\n Sleep Level Is A " << GetSleep() << " Out of 15." << endl;
		cout << "\n Stress Level Is A " << GetStress() << " Out of 20.\n\n\n";
		break;

	case 2:
		cout << "\n\n Amazing! Moving Up In The World. The Rules Of The Game Are Simple.\n"
			 << " Everyday, You Must Feed Charlize, Bath Her, And Let Her Sleep. It Is\n"
			 << " It Is Recommended To Let Her Sleep And Relax.\n\n";
		PassTime();

		cout << "\n Boredom Level Is A " << GetBoredom() << " Out Of 10." << endl;
		cout << "\n Health Level Is A " << GetHealth() << " Out Of 100." << endl;
		cout << "\n Hunger Level Is A " << GetHunger() <<  " Out of 10. " << endl;
		cout << "\n Intelligence Level Is A " << GetIntelligence() << " Out of 200. " <<endl;
		cout << "\n Sleep Level Is A " << GetSleep() << " Out of 15." << endl;
		cout << "\n Stress Level Is A " << GetStress() << " Out of 20.\n\n\n";
		break;

	case 3:
		cout << "\n\n You Are A Veteran. Great. Good Luck.\n";
		PassTime();
		PassTime();
		PassTime();
		PassTime();
		cout << "\n Boredom Level Is A " << GetBoredom() << " Out Of 10." << endl;
		cout << "\n Health Level Is A " << GetHealth() << " Out Of 100." << endl;
		cout << "\n Hunger Level Is A " << GetHunger() <<  " Out of 10. " << endl;
		cout << "\n Intelligence Level Is A " << GetIntelligence() << " Out of 200. " <<endl;
		cout << "\n Sleep Level Is A " << GetSleep() << " Out of 15." << endl;
		cout << "\n Stress Level Is A " << GetStress() << " Out of 20.\n\n\n";
		break;
	}
}

int main(int Random, string RandomWeather)
{
	Animals crit;

	int choice = 1;
	string animalCaring;

	SetConsoleTextAttribute(hConsole, 0x08);
	crit.Welcome();
	SetConsoleTextAttribute(hConsole, saved_colors);

	SetConsoleTextAttribute(hConsole, 0x0E);
	Sleep(5567);
	cin.ignore();
	cout << "\n\n\t Welcome To The Safari Game! The Game Where You Care For An Animal!\n\n";
	cout << "\n What Species Of An Animal Would You Like To Care For? : ";
	getline (cin, animalCaring);

	

	while(choice !=0)
	{
		SetConsoleTextAttribute(hConsole, 0x04);
		cout << "\n\n Sounds Great! Well Here Are Your Choices! Choose Wisely!\n\n";
		cout << "\n\t 0 - Exit\n";
		cout << "\t 1 - Let Your " << animalCaring << "  Sleep.\n";
		cout << "\t 2 - Let Your " << animalCaring << "  Eat.\n";
		cout << "\t 3 - Let Your " << animalCaring << "  Learn.\n";
		cout << "\t 4 - Let Your " << animalCaring << "  Speak.\n";
		cout << "\t 5 - Let Your " << animalCaring << "  Play!\n";
		SetConsoleTextAttribute(hConsole, 0x01);
		cout << "\n\t\tWhat Would You Like To Do? : ";
		cin >> choice;

		switch (choice)
		{
		case 0:
			SetConsoleTextAttribute(hConsole, 0x08);
			cout << "\n\n\t The Statics of Charlize Can Be Found Below.\n";
			cout << "\n Boredom Level Is A " << crit.GetBoredom() << " Out Of 10." << endl;
			cout << "\n Health Level Is A " << crit.GetHealth() << " Out Of 100." << endl;
			cout << "\n Hunger Level Is A " << crit.GetHunger() <<  " Out of 10. " << endl;
			cout << "\n Intelligence Level Is A " << crit.GetIntelligence() << " Out of 200. " <<endl;
			cout << "\n Sleep Level Is A " << crit.GetSleep() << " Out of 15." << endl;
			cout << "\n Stress Level Is A " << crit.GetStress() << " Out of 20.\n\n\n";
			cout << "\n\n Whatever, You Killed Charlize! Come Again!\n";
			cout << "\n\n The Secret Code is 630\n\n";
			cin.ignore();
			cin.get();
			system("cls");
			SetConsoleTextAttribute(hConsole, saved_colors);
			break;
		
		case 1:
			SetConsoleTextAttribute(hConsole, 0x0B);
			crit.Nap();
			system("cls");
			SetConsoleTextAttribute(hConsole, saved_colors);
			break;

		case 2:
			SetConsoleTextAttribute(hConsole, 0x05);
			crit.Eat();
			system("cls");
			SetConsoleTextAttribute(hConsole, saved_colors);
			break;

		case 3:
			SetConsoleTextAttribute(hConsole, 0x02);
			crit.Train();
			system("cls");
			SetConsoleTextAttribute(hConsole, saved_colors);
			break;

		case 4: 
			SetConsoleTextAttribute(hConsole, 0x08);
			crit.Speak(Random);
			system("cls");
			SetConsoleTextAttribute(hConsole, saved_colors);
			break;

		case 5:
			SetConsoleTextAttribute(hConsole, 0x06);
			crit.Interact();
			system("cls");
			SetConsoleTextAttribute(hConsole, saved_colors);
			break;

		case 6:
			SetConsoleTextAttribute(hConsole, 0x0A);
			cout << "\n\n\t The Statics of Charlize Can Be Found Below.\n";
			cout << "\n Boredom Level Is A " << crit.GetBoredom() << " Out Of 10." << endl;
			cout << "\n Health Level Is A " << crit.GetHealth() << " Out Of 100." << endl;
			cout << "\n Hunger Level Is A " << crit.GetHunger() <<  " Out of 10. " << endl;
			cout << "\n Intelligence Level Is A " << crit.GetIntelligence() << " Out of 200. " <<endl;
			cout << "\n Sleep Level Is A " << crit.GetSleep() << " Out of 15." << endl;
			cout << "\n Stress Level Is A " << crit.GetStress() << " Out of 20.\n\n\n";
			SetConsoleTextAttribute(hConsole, saved_colors);
			break;

		case 630:
			SetConsoleTextAttribute(hConsole, 0x0D);
			crit.Story(Random);
			system("cls");
			SetConsoleTextAttribute(hConsole, saved_colors);
			break;

		default:
			SetConsoleTextAttribute(hConsole, 0x0C);
			cout << "\n Wow, Genius, Wrong Input. " << choice << " is not proper.\n\n";
			SetConsoleTextAttribute(hConsole, saved_colors);
		}

	}

	return 0;
}
